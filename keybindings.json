// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "ctrl+'",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+cmd+right",
        "command": "-workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "ctrl+cmd+left",
        "command": "-workbench.action.moveEditorToPreviousGroup"
    },
    {
        "key": "ctrl+left",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "ctrl+right",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "ctrl+;",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+cmd+l",
        "command": "editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "key": "ctrl+shift+right",
        "command": "-editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+left",
        "command": "-editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+=",
        "command": "editor.action.fontZoomIn"
    },
    {
        "key": "ctrl+-",
        "command": "editor.action.fontZoomOut"
    },
    {
        "key": "alt+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "alt+f13",
        "command": "workbench.action.toggleZenMode"
    },
    {
        "key": "shift+backspace",
        "command": "-deleteLeft",
        "when": "textInputFocus"
    },
    {
        "key": "alt+k",
        "command": "-git.commitAll",
        "when": "!commitInProgress && !inDebugMode && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+r",
        "command": "-workbench.action.keybindingsReference"
    },
    {
        "key": "ctrl+numpad_decimal",
        "command": "git.revertSelectedRanges"
    },
    {
        "key": "ctrl+numpad_subtract",
        "command": "git.unstageSelectedRanges",
        "when": "isInDiffEditor"
    },
    {
        "key": "ctrl+numpad4",
        "command": "workbench.action.editor.previousChange"
    },
    {
        "key": "ctrl+numpad6",
        "command": "workbench.action.editor.nextChange"
    },
    {
        "key": "ctrl+numpad6",
        "command": "workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "ctrl+numpad4",
        "command": "workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "ctrl+shift+b",
        "command": "-workbench.action.tasks.build",
        "when": "taskCommandsRegistered"
    },
    {
        "key": "ctrl+numpad3",
        "command": "bookmarks.jumpToNext",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+alt+l",
        "command": "-bookmarks.jumpToNext",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+[",
        "command": "bookmarks.jumpToPrevious",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+alt+j",
        "command": "-bookmarks.jumpToPrevious",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+numpad2",
        "command": "bookmarks.toggle",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+alt+k",
        "command": "-bookmarks.toggle",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+g",
        "command": "git-graph.view"
    },
    {
        "key": "alt+y",
        "command": "workbench.action.tasks.runTask",
        "when": "taskCommandsRegistered"
    },
    {
        "key": "alt+o",
        "command": "workbench.action.terminal.focusNext",
    },
    {
        "key": "alt+u",
        "command": "workbench.action.terminal.kill"
    },
    {
        "key": "cmd+q",
        "command": "-seito-openfile.openFileLikeThisFile"
    },
    {
        "key": "ctrl+n",
        "command": "-workbench.action.showAllSymbols"
    },
    {
        "key": "cmd+a",
        "command": "-bracket-select.select",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+alt+a",
        "command": "-bracket-select.select-include",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+z",
        "command": "-bracket-select.undo-select",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+g",
        "command": "-cursorUndo",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+\\ c",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
          "text": "import Test.Common.Config\u000aimport Test.Common.Database\u000a\u000awithOrvilleEnv (runDemoLocal . "
        }
    },
    {
        "key": "ctrl+\\ b",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
          "text": "import Test.Common.Config\u000arunDemoLocal "
        }
    },
    {
        "key": "ctrl+\\ shift+c",
        "command": "multiCommand.importAndRunClearBoxTest"
    },
    {
        "key": "alt+h",
        "command": "workbench.action.navigateBack",
        "when": "canNavigateBack"
    },
    {
        "key": "cmd+left",
        "command": "-workbench.action.navigateBack",
        "when": "canNavigateBack"
    },
    {
        "key": "alt+e",
        "command": "workbench.action.navigateForward",
        "when": "canNavigateForward"
    },
    {
        "key": "cmd+right",
        "command": "-workbench.action.navigateForward",
        "when": "canNavigateForward"
    },
    {
        "key": "ctrl+\\",
        "command": "-workbench.action.splitEditor"
    },
    {
        "key": "f9",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "f10",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "alt+left",
        "command": "cursorWordPartLeft",
        "when": "textInputFocus"
    },
    {
        "key": "alt+right",
        "command": "cursorWordPartRight",
        "when": "textInputFocus"
    },
    {
        "key": "shift+cmd+left",
        "command": "cursorWordPartLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+cmd+right",
        "command": "cursorWordPartRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+f10",
        "command": "workbench.action.pinEditor",
        "when": "!activeEditorIsPinned"
    },
    {
        "key": "ctrl+f10",
        "command": "workbench.action.unpinEditor",
        "when": "activeEditorIsPinned"
    },
    {
        "key": "shift+f10",
        "command": "workbench.action.moveEditorRightInGroup"
    },
    {
        "key": "shift+f9",
        "command": "workbench.action.moveEditorLeftInGroup"
    },
    {
        "key": "ctrl+\\ \\",
        "command": "workbench.action.splitEditor"
    },
    {
        "key": "cmd+pagedown",
        "command": "search.action.focusNextSearchResult",
        "when": "hasSearchResult || inSearchEditor"
    },
    {
        "key": "alt+backspace",
        "command": "deleteWordPartLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+cmd+backspace",
        "command": "-deleteWordPartLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+\\ /",
        "command": "rewrap.rewrapComment",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+alt+left",
        "command": "-workbench.action.navigateBack",
        "when": "canNavigateBack"
    },
    {
        "key": "cmd+alt+right",
        "command": "-workbench.action.navigateForward",
        "when": "canNavigateForward"
    },
    {
        "key": "ctrl+f12",
        "command": "metaGo.gotoSmart"
    },
    {
        "key": "cmd+p",
        "command": "-seito-openfile.openFileFromText",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+home",
        "command": "-breadcrumbs.focus",
        "when": "breadcrumbsPossible && breadcrumbsVisible"
    },
    {
        "key": "ctrl+/",
        "command": "multiCommand.commentDown"
    },
    {
        "key": "alt+[",
        "command": "editor.action.outdentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+[",
        "command": "-editor.action.outdentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+]",
        "command": "-editor.action.indentLines",
        "when": "editorTextFocus && !editorReadonly"
    },{
        "key": "alt+]",
        "command": "editor.action.indentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+]",
        "command": "bookmarks.jumpToNext",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+f10",
        "command": "workbench.action.closeEditorsToTheRight"
    },
    {
        "key": "ctrl+alt+f9",
        "command": "workbench.action.closeEditorsToTheLeft"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.terminal.clear",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+`",
        "command": "-workbench.action.selectTheme"
    },
    {
        "key": "ctrl+\\ r",
        "command": "ahk++.run",
        "when": "editorFocus"
    },
    {
        "key": "shift+delete",
        "command": "-editor.action.clipboardCutAction"
    },
    {
        "key": "ctrl+d",
        "command": "-editor.action.duplicateSelection",
        "when": "editorHasSelection && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+d",
        "command": "-editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorHasSelection && !editorReadonly"
    },
    {
        "key": "ctrl+d",
        "command": "-workbench.files.action.compareFileWith",
        "when": "activeEditor && !editorTextFocus"
    },
    {
        "key": "ctrl+shift+g shift+.",
        "command": "-gitlens.diffWithWorking",
        "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
    },
    {
        "key": "ctrl+shift+g shift+,",
        "command": "-gitlens.diffLineWithPrevious",
        "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
    },
    {
        "key": "ctrl+shift+g shift+h",
        "command": "-gitlens.showQuickRepoHistory",
        "when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "ctrl+shift+g shift+b",
        "command": "-gitlens.toggleCodeLens",
        "when": "editorTextFocus && !gitlens:disabled && !gitlens:disabledToggleCodeLens && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "ctrl+shift+g g",
        "command": "-workbench.view.scm",
        "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "ctrl+shift+g /",
        "command": "-gitlens.gitCommands",
        "when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "ctrl+shift+g .",
        "command": "-gitlens.diffWithNext",
        "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
    },
    {
        "key": "ctrl+shift+g .",
        "command": "-gitlens.diffWithNextInDiffLeft",
        "when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
    },
    {
        "key": "ctrl+shift+g .",
        "command": "-gitlens.diffWithNextInDiffRight",
        "when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
    },
    {
        "key": "ctrl+shift+g ,",
        "command": "-gitlens.diffWithPrevious",
        "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
    },
    {
        "key": "ctrl+shift+g ,",
        "command": "-gitlens.diffWithPreviousInDiffLeft",
        "when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
    },
    {
        "key": "ctrl+shift+g ,",
        "command": "-gitlens.diffWithPreviousInDiffRight",
        "when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
    },
    {
        "key": "ctrl+shift+g h",
        "command": "-gitlens.showQuickFileHistory",
        "when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "ctrl+shift+g c",
        "command": "-gitlens.showQuickCommitFileDetails",
        "when": "editorTextFocus && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "ctrl+shift+g s",
        "command": "-gitlens.showQuickRepoStatus",
        "when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "ctrl+shift+g b",
        "command": "-gitlens.toggleFileBlame",
        "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /blameable/"
    },
    {
        "key": "ctrl+cmd+o",
        "command": "-editor.action.organizeImports",
        "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
    },
    {
        "key": "alt+f9",
        "command": "workbench.action.firstEditorInGroup"
    },
    {
        "key": "alt+f10",
        "command": "workbench.action.lastEditorInGroup"
    },
    {
        "key": "ctrl+shift+cmd+\\",
        "command": "workbench.action.moveEditorToNextGroup",
        "when": "activeEditorGroupIndex == 1"
    },
    {
        "key": "ctrl+shift+cmd+\\",
        "command": "workbench.action.moveEditorToPreviousGroup",
        "when": "activeEditorGroupIndex > 1"
    },
    {
        "key": "ctrl+cmd+\\",
        "command": "workbench.action.navigateEditorGroups"
    },
    {
        "key": "ctrl+p",
        "command": "-editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "key": "ctrl+\\ m",
        "command": "multiCommand.copyModule"
    },
    {
        "key": "ctrl+\\ i",
        "command": "multiCommand.importCurrentModule"
    },
    {
        "key": "ctrl+\\ l",
        "command": "multiCommand.importCurrentModule"
    },
    {
        "key": "ctrl+h",
        "command": "editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+l",
        "command": "workbench.action.editor.changeLanguageMode",
        "when": "!notebookEditorFocused"
    },
    {
        "key": "tab",
        "command": "markdowntable.nextCell",
        "when": "editorTextFocus && markdowntable.contextkey.selection.InMarkdownTable && !editorReadonly && !editorTabMovesFocus && !inSnippetMode && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
    },
    {
        "key": "shift+tab",
        "command": "markdowntable.prevCell",
        "when": "editorTextFocus && markdowntable.contextkey.selection.InMarkdownTable && !editorReadonly && !editorTabMovesFocus && !inSnippetMode && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "ctrl+r",
        "command": "editor.action.startFindReplaceAction",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "ctrl+f13",
        "command": "metaGo.gotoSmart"
    },
    {
        "key": "shift+f13",
        "command": "metaGo.selectSmart",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+[",
        "command": "editor.action.marker.prev",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+pagedown",
        "command": "search.action.focusNextSearchResult",
        "when": "hasSearchResult || inSearchEditor"
    },
    {
        "key": "ctrl+alt+]",
        "command": "editor.action.marker.next",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+[",
        "command": "editor.action.marker.prev",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+alt+]",
        "command": "editor.action.marker.nextInFiles",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+alt+[",
        "command": "editor.action.marker.prevInFiles",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+y",
        "command": "-editor.action.deleteLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+\\ w",
        "command": "editor.emmet.action.wrapWithAbbreviation"
    },
    {
        "key": "alt+r",
        "command": "workbench.action.openRecent"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "cmd+alt+]",
        "command": "workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "cmd+alt+[",
        "command": "workbench.action.editor.previousChange"
    },
    {
        "key": "ctrl+cmd+alt+'",
        "command": "bookmarks.clearFromAllFiles"
    },
    {
        "key": "alt+[",
        "command": "markdowntable.insertLeft",
        "when": "editorTextFocus && markdowntable.contextkey.selection.InMarkdownTable && !editorReadonly && !editorTabMovesFocus && !inSnippetMode && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
    },
    {
        "key": "alt+]",
        "command": "markdowntable.insertRight",
        "when": "editorTextFocus && markdowntable.contextkey.selection.InMarkdownTable && !editorReadonly && !editorTabMovesFocus && !inSnippetMode && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+alt+u",
        "command": "editor.action.transformToUppercase"
    },
    {
        "key": "ctrl+alt+l",
        "command": "editor.action.transformToLowercase"
    },
    {
        "key": "cmd+f",
        "command": "gitlens.openWorkingFile",
        "when": "inDiffEditor"
    },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "ctrl+j",
        "command": "-editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+k",
        "command": "keybindings.editor.recordSearchKeys",
        "when": "inKeybindings && inKeybindingsSearch"
    },
    {
        "key": "cmd+alt+]",
        "command": "workbench.action.editor.nextChange"
    },
    {
        "key": "cmd+alt+[",
        "command": "workbench.action.editor.previousChange"
    },
    {
        "key": "ctrl+shift+s",
        "command": "workbench.action.toggleStatusbarVisibility"
    },
    {
        "key": "alt+f13",
        "command": "multiCommand.doubleZenMode",
        "when": "inZenMode"
    },
    {
        "key": "ctrl+\\ g",
        "command": "workbench.view.extension.gitlab-workflow"
    },
    {
        "key": "alt+pagedown",
        "command": "search.action.focusNextSearchResult",
        "when": "hasSearchResult || inSearchEditor"
    },
    {
        "key": "cmd+pageup",
        "command": "search.action.focusPreviousSearchResult",
        "when": "hasSearchResult || inSearchEditor"
    },
    {
        "key": "ctrl+pageup",
        "command": "search.action.focusPreviousSearchResult",
        "when": "hasSearchResult || inSearchEditor"
    },
    {
        "key": "ctrl+enter",
        "command": "rest-client.request",
        "when": "editorTextFocus && editorLangId == 'http'"
    },
    {
        "key": "cmd+up",
        "command": "-cursorTop",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+up",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+down",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+cmd+down",
        "command": "editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+cmd+up",
        "command": "editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+'",
        "command": "extension.selectEitherQuote",
        "when": "editorFocus"
    },
    {
        "key": "cmd+a",
        "command": "-editor.action.selectAll"
    },
    {
        "key": "cmd+f12",
        "command": "seito-openfile.openFileFromText",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+a",
        "command": "-workbench.action.terminal.selectAll",
        "when": "terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
    },
    {
        "key": "cmd+a",
        "command": "-list.selectAll",
        "when": "listFocus && listSupportsMultiselect && !inputFocus"
    },
    {
        "key": "cmd+a",
        "command": "editor.action.selectAll"
    },
    {
        "key": "cmd+delete",
        "command": "deleteWordPartRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+m",
        "command": "workbench.action.terminal.openFileLink"
    },
    {
        "key": "ctrl+shift+m",
        "command": "workbench.action.terminal.openDetectedLink",
        "when": "terminalHasBeenCreated"
    },
    {
        "key": "shift+cmd+o",
        "command": "-workbench.action.terminal.openDetectedLink",
        "when": "terminalAccessibleBufferFocus && terminalHasBeenCreated || terminalFocus && terminalHasBeenCreated"
    },
    {
        "key": "ctrl+shift+m",
        "command": "-workbench.actions.view.problems",
        "when": "workbench.panel.markers.view.active"
    },
    {
        "key": "ctrl+shift+m",
        "command": "-editor.action.toggleTabFocusMode"
    },
    {
        "key": "alt+pageup",
        "command": "search.action.focusPreviousSearchResult",
        "when": "hasSearchResult || inSearchEditor"
    },
    {
        "key": "f12",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "shift+space",
        "command": "-metaGo.metaJump.hideDecoration",
        "when": "editorTextFocus && metaGoJumping"
    },
    {
        "key": "ctrl+m",
        "command": "-editor.action.toggleTabFocusMode"
    },
    {
        "key": "ctrl+shift+f",
        "command": "workbench.action.replaceInFiles"
    },
    {
        "key": "shift+cmd+h",
        "command": "-workbench.action.replaceInFiles"
    },
    {
        "key": "ctrl+cmd+enter",
        "command": "editor.action.replaceAll",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "alt+cmd+enter",
        "command": "-editor.action.replaceAll",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+cmd+enter",
        "command": "search.action.replaceAllInFile",
        "when": "fileMatchFocus && isEditableItem && replaceActive && searchViewletVisible"
    },
    {
        "key": "shift+cmd+enter",
        "command": "-search.action.replaceAllInFile",
        "when": "fileMatchFocus && isEditableItem && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+cmd",
        "command": "search.action.replaceAllInFolder",
        "when": "folderMatchFocus && isEditableItem && replaceActive && searchViewletVisible"
    },
    {
        "key": "shift+cmd+enter",
        "command": "-search.action.replaceAllInFolder",
        "when": "folderMatchFocus && isEditableItem && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "-editor.action.replaceAll",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "-search.action.replaceAll",
        "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
    },
    {
        "key": "ctrl+cmd+enter",
        "command": "search.action.replaceAll",
        "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
    },
    {
        "key": "alt+cmd+enter",
        "command": "-search.action.replaceAll",
        "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
    },
    {
        "key": "cmd+a",
        "command": "workbench.action.terminal.selectAll",
        "when": "terminalFocus"
    },
    {
        "key": "alt+a",
        "command": "extension.searchCTags",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+t",
        "command": "-extension.searchCTags",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+e",
        "command": "-workbench.view.explorer",
        "when": "viewContainer.workbench.view.explorer.enabled"
    },
    {
        "key": "ctrl+shift+e",
        "command": "workbench.view.explorer"
    },
    {
        "key": "ctrl+f9",
        "command": "workbench.action.closeOtherEditors"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+b",
        "command": "-cursorLeft",
        "when": "textInputFocus"
    },
    {
        "key": "alt+i",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "alt+j",
        "command": "workbench.action.terminal.new",
        "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
    },
    {
        "key": "shift+alt+left",
        "command": "-editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+left",
        "command": "-cursorWordLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+left",
        "command": "-cursorWordLeftSelect",
        "when": "editorTextFocus && !config.intellij-idea-keybindings.useCamelHumpsWords"
    },
    {
        "key": "shift+alt+left",
        "command": "cursorWordPartStartLeftSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+left",
        "command": "-cursorWordPartStartLeftSelect",
        "when": "config.intellij-idea-keybindings.useCamelHumpsWords && editorTextFocus"
    },
    {
        "key": "shift+alt+right",
        "command": "-editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+right",
        "command": "-cursorWordRightSelect",
        "when": "editorTextFocus && !config.intellij-idea-keybindings.useCamelHumpsWords"
    },
    {
        "key": "shift+alt+right",
        "command": "-cursorWordEndRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+right",
        "command": "cursorWordPartRightSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+right",
        "command": "-cursorWordPartRightSelect",
        "when": "config.intellij-idea-keybindings.useCamelHumpsWords && editorTextFocus"
    },
    {
        "key": "escape escape",
        "command": "-workbench.action.exitZenMode",
        "when": "inZenMode"
    },
    {
        "key": "ctrl+alt+i",
        "command": "editor.action.goToTypeDefinition",
        "when": "editorHasTypeDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+shift+b",
        "command": "-editor.action.goToTypeDefinition",
        "when": "editorHasTypeDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "alt+f",
        "command": "git.openFile",
        "when": "inDiffEditor"
    },
    {
        "key": "ctrl+alt+win+k",
        "command": "keybindings.editor.recordSearchKeys",
        "when": "inKeybindings"
    },
    {
        "key": "alt+k",
        "command": "-keybindings.editor.recordSearchKeys",
        "when": "inKeybindings && inKeybindingsSearch"
    },
    {
        "key": "f13",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "f12",
        "command": "-editor.gotoNextSymbolFromResult",
        "when": "hasSymbols"
    },
    {
        "key": "f12",
        "command": "-goToNextReference",
        "when": "inReferenceSearchEditor || referenceSearchVisible"
    }
]